[{"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\index.js":"1","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\App.js":"2","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\store\\FlatStore.js":"3","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\store\\UserStore.js":"4","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\NavBar.js":"5","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\AppRouter.js":"6","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\http\\userAPI.js":"7","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\routes.js":"8","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\http\\index.js":"9","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\utils\\consts.js":"10","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\FlatPage.js":"11","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Auth.js":"12","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Rental.js":"13","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Admin.js":"14","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Favorites.js":"15","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\http\\flatAPI.js":"16","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\Pages.js":"17","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\FlatList.js":"18","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\DistrictBar.js":"19","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\RoomBar.js":"20","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\modals\\CreateDistrict.js":"21","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\modals\\CreateRoom.js":"22","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\modals\\CreateFlat.js":"23","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\FlatItem.js":"24"},{"size":447,"mtime":1654634398781,"results":"25","hashOfConfig":"26"},{"size":860,"mtime":1640388352000,"results":"27","hashOfConfig":"26"},{"size":1559,"mtime":1654634398787,"results":"28","hashOfConfig":"26"},{"size":544,"mtime":1640388352000,"results":"29","hashOfConfig":"26"},{"size":2522,"mtime":1654634398776,"results":"30","hashOfConfig":"26"},{"size":824,"mtime":1654634398773,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1640388352000,"results":"32","hashOfConfig":"26"},{"size":825,"mtime":1654634398786,"results":"33","hashOfConfig":"26"},{"size":407,"mtime":1640388352000,"results":"34","hashOfConfig":"26"},{"size":238,"mtime":1654634398788,"results":"35","hashOfConfig":"26"},{"size":2664,"mtime":1654634398784,"results":"36","hashOfConfig":"26"},{"size":3363,"mtime":1654634398783,"results":"37","hashOfConfig":"26"},{"size":1570,"mtime":1654634398785,"results":"38","hashOfConfig":"26"},{"size":1622,"mtime":1654634398782,"results":"39","hashOfConfig":"26"},{"size":2006,"mtime":1654695193798,"results":"40","hashOfConfig":"26"},{"size":1334,"mtime":1654634398780,"results":"41","hashOfConfig":"26"},{"size":821,"mtime":1654634398777,"results":"42","hashOfConfig":"26"},{"size":486,"mtime":1654634398775,"results":"43","hashOfConfig":"26"},{"size":941,"mtime":1654652702508,"results":"44","hashOfConfig":"26"},{"size":829,"mtime":1654634398778,"results":"45","hashOfConfig":"26"},{"size":1427,"mtime":1654634398778,"results":"46","hashOfConfig":"26"},{"size":1423,"mtime":1654634398779,"results":"47","hashOfConfig":"26"},{"size":7686,"mtime":1654634398779,"results":"48","hashOfConfig":"26"},{"size":843,"mtime":1654634398774,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1wqu4b5",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\index.js",[],["105","106"],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\App.js",["107"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\store\\FlatStore.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\store\\UserStore.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\http\\userAPI.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\routes.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\http\\index.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\utils\\consts.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\FlatPage.js",["108"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {addToFavorites, fetchOneFlat} from \"../http/flatAPI\";\r\n\r\nconst FlatPage = () => {\r\n    const [flat, setFlat] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneFlat(id).then(data => setFlat(data))\r\n    }, [])\r\n    \r\n    \r\n    const add = () => {\r\n        const formData = new FormData()\r\n        formData.append('flatId', id)\r\n        addToFavorites(formData).then(response => alert(`Квартира ` + flat.name + ` добавлена в избранное`))\r\n    }\r\n    console.log(flat.img)\r\n    console.log(flat.img1)\r\n    console.log(flat.img2)\r\n    console.log(flat.img3)\r\n\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + flat.img}/>\r\n                </Col>\r\n                \r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column justify-content-around\"\r\n                        style={{width: 500, height: 300, fontSize: 32, border: '5px solid white' }}\r\n                    >\r\n                        <h1>{flat.name}</h1>\r\n\r\n                        <h3>{flat.priceflat} руб.</h3>\r\n                        <Button variant={\"outline-success\"} onClick={add} >Добавить в избранное</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row><br/>\r\n\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Описание</h1>\r\n                {flat.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'moccasin' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row><br/>\r\n\r\n            <Row>\r\n            <h2>Дополнительные фото</h2></Row><br/>\r\n            <Row>\r\n            <Col md={4}>\r\n                <Image width={350} height={350} src={process.env.REACT_APP_API_URL + flat.img1}/>\r\n            </Col><br/>\r\n            <Col md={4}>\r\n                <Image width={350} height={350} src={process.env.REACT_APP_API_URL + flat.img2}/>\r\n            </Col><br/>\r\n            <Col md={4}>\r\n                <Image width={350} height={350} src={process.env.REACT_APP_API_URL + flat.img3}/>\r\n            </Col>\r\n            </Row><br/>\r\n        </Container>\r\n\r\n    );\r\n};\r\nexport default FlatPage;\r\n","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Auth.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Rental.js",["109","110"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport RoomBar from \"../components/RoomBar\";\r\nimport DistrictBar from \"../components/DistrictBar\";\r\nimport FlatList from \"../components/FlatList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchDistricts, fetchFlats, fetchRooms} from \"../http/flatAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Rental = observer(() => {\r\n    const {flat} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchRooms().then(data => flat.setRooms(data))\r\n        fetchDistricts().then(data => flat.setDistricts(data))\r\n        fetchFlats(null, null, 1, 2).then(data => {\r\n            flat.setFlats(data.rows)\r\n            flat.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchFlats(flat.selectedRoom.id, flat.selectedDistrict.id, flat.page, 2).then(data => {\r\n            flat.setFlats(data.rows)\r\n            flat.setTotalCount(data.count)\r\n        })\r\n    }, [flat.page, flat.selectedRoom, flat.selectedDistrict,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <RoomBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <DistrictBar/>\r\n                    <FlatList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Rental;\r\n","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Admin.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\pages\\Favorites.js",["111","112"],"import React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Context } from '..';\r\nimport { getFavorites } from '../http/flatAPI';\r\n\r\nimport { Card, Col, Container, Row } from 'react-bootstrap'\r\nimport { observer } from 'mobx-react-lite';\r\nimport {FLAT_ROUTE} from \"../utils/consts\";\r\n\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst Favorites = observer(() => {\r\n    const {flat} = useContext(Context)\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getFavorites().then(data => flat.setFavoritess(data))\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <Container\r\n            className=\"d-flex flex-sm-column justify-content-center align-items-center mt-3\"\r\n        >\r\n            <h1 className=\"pb-2\">Избранное</h1>\r\n            \r\n            {flat.favorites.map(product =>\r\n                <Col onClick={() => history.push(FLAT_ROUTE + '/' + product.flat.id)}>\r\n                    <Card style={{cursor: 'pointer'}} className=\"d-flex w-100 p-2 justify-content-center mb-2\" key={product.id} >\r\n                        <Row className=\"d-flex w-100\">\r\n                            <Col>\r\n                                <div className=\"d-flex flex-row align-items-center\">\r\n                                    <img src={process.env.REACT_APP_API_URL + product.flat.img} width={100} />\r\n                                    <h1 className=\"pl-3\">{product.flat.name}</h1>\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"d-flex h-100 flex-row justify-content-end align-items-center\">\r\n                                    <h2 className=\"font-weight-light\">{product.flat.priceflat} рублей</h2>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n            )}\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Favorites;\r\n","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\http\\flatAPI.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\Pages.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\FlatList.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\DistrictBar.js",["113"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Card, Row} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nconst DistrictBar = observer(() => {\r\n    const {flat} = useContext(Context)\r\n\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            \r\n            <h4 style={{marginTop: 16, marginRight: 15}}>Район:</h4>\r\n            {flat.districts.map(district =>\r\n                <Card\r\n                    style={{cursor:'pointer'}}\r\n                    key={district.id}\r\n                    className=\"p-3\"\r\n                    onClick={() => flat.setSelectedDistrict(district)}\r\n                    border={district.id === flat.selectedDistrict.id ? 'success' : 'light'}\r\n                >\r\n                    {district.name}\r\n                </Card>\r\n            )}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default DistrictBar;\r\n","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\RoomBar.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\modals\\CreateDistrict.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\modals\\CreateRoom.js",[],"C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\modals\\CreateFlat.js",["114"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createFlat, fetchDistricts, fetchRooms} from \"../../http/flatAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateFlat = observer(({show, onHide}) => {\r\n    const {flat} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [priceflat, setPriceflat] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [file1, setFile1] = useState(null)\r\n    const [file2, setFile2] = useState(null)\r\n    const [file3, setFile3] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchRooms().then(data => flat.setRooms(data))\r\n        fetchDistricts().then(data => flat.setDistricts(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', img: '', number: Date.now()}])\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    \r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n    \r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n    const selectFile1 = e => {\r\n        setFile1(e.target.files[0])\r\n    }\r\n    const selectFile2 = e => {\r\n        setFile2(e.target.files[0])\r\n    }\r\n    const selectFile3 = e => {\r\n        setFile3(e.target.files[0])\r\n    }\r\n    \r\n    const addFlat = () => {\r\n        const formData = new FormData()\r\n        try{\r\n            formData.append('name', name)\r\n            formData.append('priceflat', `${priceflat}`)\r\n            formData.append('img', file)\r\n            formData.append('img1', file1)\r\n            formData.append('img2', file2)\r\n            formData.append('img3', file3)\r\n            formData.append('districtId', flat.selectedDistrict.id)\r\n            formData.append('roomId', flat.selectedRoom.id)\r\n            formData.append('info', JSON.stringify(info))\r\n            \r\n            for(let [name, value] of formData) {\r\n                console.log(`${name} = ${value}`);\r\n            }\r\n            createFlat(formData).then(data => onHide())\r\n            \r\n        } catch(e){\r\n            alert(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить квартиру\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{flat.selectedRoom.name || \"Выберите кол-во комнат\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {flat.rooms.map(room =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => flat.setSelectedRoom(room)}\r\n                                    key={room.id}\r\n                                >\r\n                                    {room.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{flat.selectedDistrict.name || \"Выберите район\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {flat.districts.map(district =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => flat.setSelectedDistrict(district)}\r\n                                    key={district.id}\r\n                                >\r\n                                    {district.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите заголовок для описания квартиры\"\r\n                    />\r\n                    <Form.Control\r\n                        value={priceflat}\r\n                        onChange={e => setPriceflat(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость аренды\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile1}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile2}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile3}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-success\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={6}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название \"\r\n                                />\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => \r\n                                        changeInfo('description', e.target.value, i.number)\r\n                                }\r\n                                    placeholder=\"Введите описание \"\r\n                                />\r\n                            </Col>\r\n                            <Col className=\"mt-4\" md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addFlat}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateFlat;\r\n","C:\\Users\\Тимур\\OneDrive\\Рабочий стол\\ПИ проект с корзиной\\client\\src\\components\\FlatItem.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":19,"column":8,"nodeType":"121","endLine":19,"endColumn":10,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":11,"column":8,"nodeType":"121","endLine":11,"endColumn":10,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":23,"column":8,"nodeType":"121","endLine":23,"endColumn":10,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"125","line":30,"column":8,"nodeType":"121","endLine":30,"endColumn":62,"suggestions":"127"},{"ruleId":"119","severity":1,"message":"125","line":19,"column":8,"nodeType":"121","endLine":19,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":34,"column":37,"nodeType":"131","endLine":34,"endColumn":111},{"ruleId":"132","severity":1,"message":"133","line":5,"column":8,"nodeType":"134","messageId":"135","endLine":5,"endColumn":13},{"ruleId":"119","severity":1,"message":"125","line":21,"column":8,"nodeType":"121","endLine":21,"endColumn":10,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'flat'. Either include it or remove the dependency array.",["141"],["142"],["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"149","fix":"153"},{"desc":"149","fix":"154"},"Update the dependencies array to be: [user]",{"range":"155","text":"156"},"Update the dependencies array to be: [id]",{"range":"157","text":"158"},"Update the dependencies array to be: [flat]",{"range":"159","text":"160"},"Update the dependencies array to be: [flat.page, flat.selectedRoom, flat.selectedDistrict, flat]",{"range":"161","text":"162"},{"range":"163","text":"160"},{"range":"164","text":"160"},[641,643],"[user]",[426,428],"[id]",[892,894],"[flat]",[1120,1174],"[flat.page, flat.selectedRoom, flat.selectedDistrict, flat]",[569,571],[893,895]]